[build-system]
requires = ["hatchling==1.27.0"]
build-backend = "hatchling.build"

[project]
name = "pgai"
description = "AI workflows in your PostgreSQL database"
requires-python = ">=3.10"
readme = "README.md"
keywords = ["ai", "postgres"]
dynamic = ["version"]
dependencies = [
    # CLI and database installation core dependencies
    "click>=8.0,<9.0",
    "psycopg[binary]>=3.2,<4.0",
    "pydantic>=2.0,<3.0",
    "typing_extensions>=4.0,<5.0",
    "python-dotenv>=1.0,<2.0",
    "semver>=3.0.4",
    "structlog>=24.0,<26.0",
    "datadog_lambda>=6.9,<7.0",
    "pytimeparse>=1.1,<2.0",
]
classifiers = [
    "License :: OSI Approved :: PostgreSQL License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
]

[project.optional-dependencies]
sqlalchemy=[
    "sqlalchemy>=2.0.36",
    "alembic>=1.14.0",
]

vectorizer-worker = [
    # Core worker system dependencies
    "exceptiongroup>=1.0, <2.0",
    "pgvector>=0.3,<1.0",
    
    # Document processing
    "boto3>=1.35.0,<2.0",
    "boto3-stubs[s3,sts]>=1.37.30",
    "smart-open==7.1.0",
    "filetype==1.2.0",
    "pymupdf4llm==0.0.24",
    "docling==2.34.0",
    "ijson>=3.3.0",
    
    # Embedding providers
    "langchain-text-splitters>=0.2,<1.0",
    "openai>=1.44,<2.0",
    "tiktoken>=0.7,<1.0",
    "ollama>=0.4.5,<0.6.0",
    "voyageai>=0.3.1,<0.3.2; python_version < '3.13'", # 0.3.2 fails the tests somehow
    "litellm>=1.65.0,<1.73.0",
    "mistral-common>=1.0,<2.0",
    "google-cloud-aiplatform[tokenization]>=1.78.0,<2.0",
]

semantic-catalog = [
    # Core semantic catalog dependencies
    "pgvector>=0.3,<1.0",
    "pydantic-ai>=0.2.12",
    "rich>=13.9.4",
    "jinja2>=3.1.5",
    "pyyaml>=6.0.2",
    
    # AI/ML for embeddings
    "openai>=1.44,<2.0",
    "ollama>=0.4.5,<0.6.0",
    "sentence-transformers>=4.0.2",
    "torch>=2.6.0",
    "einops>=0.8.1",
]

[project.urls]
Homepage = "https://github.com/timescale/pgai"
Repository = "https://github.com/timescale/pgai"
"Bug Tracker" = "https://github.com/timescale/pgai/issues"
Documentation = "https://github.com/timescale/pgai/tree/main/docs"

[tool.hatch.version]
path = "pgai/__init__.py"

[project.scripts]
pgai = "pgai.cli:cli"
generate = "pgai.vectorizer.generate.generate:generate_models"


[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
markers = [
    "postgres_params: Parameters for the postgres_container fixture (e.g. `load_openai_key=False`)"
]
python_files = ["test_*.py"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.pyright]
# this enables practically every flag given by pyright.
# there are a couple of flags that are still disabled by
# default in strict mode as they are experimental and niche.
typeCheckingMode = "strict"
exclude = [
    ".venv",
    ".direnv",
    ".devenv",
    "dist/*",
    "db/tests/*",
]
reportImplicitOverride = true

[tool.ruff]
line-length = 88
indent-width = 4
output-format = "grouped"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "ARG",  # unused arguments
    "W291", # trailing whitespace
    "PIE",  # print statements
    "Q"     # flakes8-quote
]
ignore = ["E501"] # we use `ruff format` on everything, so this is just annoying
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"db/tests/*" = ["E501", "SIM117", "W291", "ARG001"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.uv]
dev-dependencies = [
    "ruff==0.6.9",
    "pytest==8.3.2",
    "pytest-asyncio==0.25.3",
    "python-dotenv==1.0.1",
    "vcrpy==7.0.0",
    "pyright>=1.1.394,<1.1.401", # regression in 1.1.401: https://github.com/microsoft/pyright/issues/10484
    "psycopg[binary]==3.2.7",
    "testcontainers==4.8.1",
    "build==1.2.2.post1",
    "twine==6.1.0",
    "mitmproxy==12.0.0; python_version >= '3.12'",
    "mitmproxy==10.3.0; python_version < '3.12'",
    "Jinja2>=3.1.5",
    "fastapi[standard]>=0.115.8",
    "pgspot>=0.9.0",
    "pdbpp>=0.10.3",
    "docker>=7.1.0",
]

[dependency-groups]
bench = [
    "memray>=1.16.0",
    "py-spy>=0.4.0",
]

[tool.hatch.build.targets.wheel.shared-data]
"pgai/data" = "data"
