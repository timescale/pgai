[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pgai"
description = "AI workflows in your PostgreSQL database"
requires-python = ">=3.10"
readme = "README.md"
keywords = ["ai", "postgres"]
dynamic = ["version"]
dependencies = [
    "click>=8.0,<9.0",
    "psycopg[binary]>=3.2,<4.0",
    "langchain-openai>=0.1,<1.0",
    "langchain-text-splitters>=0.2,<1.0",
    "pydantic>=2.0,<3.0",
    "ollama>=0.3.3,<0.4.0",
    "openai>=1.44,<2.0",
    "python-dotenv>=1.0,<2.0",
    "structlog>=24.0,<25.0",
    "pgvector>=0.3,<1.0",
    "tiktoken>=0.7,<1.0",
    "typing_extensions>=4.0,<5.0",
    "datadog_lambda>=6.9,<7.0",
    "pytimeparse>=1.1,<2.0",
]
classifiers = [
    "License :: OSI Approved :: PostgreSQL License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
]

[project.urls]
Homepage = "https://github.com/timescale/pgai"
Repository = "https://github.com/timescale/pgai"
"Bug Tracker" = "https://github.com/timescale/pgai/issues"
Documentation = "https://github.com/timescale/pgai/tree/main/docs"

[tool.hatch.version]
path = "pgai/__init__.py"

[project.scripts]
pgai = "pgai.cli:cli"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
python_files = ["test_*.py"]

[tool.pyright]
# this enables practically every flag given by pyright.
# there are a couple of flags that are still disabled by
# default in strict mode as they are experimental and niche.
typeCheckingMode = "strict"
exclude = [
    ".venv",
]
reportImplicitOverride = true

[tool.ruff]
line-length = 88
indent-width = 4
output-format = "grouped"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "ARG",  # unused arguments
    "W291", # trailing whitespace
    "PIE",  # print statements
    "Q"     # flakes8-quote
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.hatch.metadata]
allow-direct-references = true

[tool.uv]
dev-dependencies = [
    "ruff==0.6.9",
    "pytest==8.3.2",
    "python-dotenv==1.0.1",
    "vcrpy==6.0.1",
    "pyright==1.1.385",
    "psycopg[binary]==3.2.1",
    "testcontainers==4.8.1",
    "build==1.2.2.post1",
    "twine==5.1.1",
]