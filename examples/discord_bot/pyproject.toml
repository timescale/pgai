[project]
name = "pgai-discord-bot"
description = "AI answers about pgai"
requires-python = ">=3.12"
readme = "README.md"
keywords = ["ai", "postgres"]
version = "0.1.0"
dependencies = [
    "alembic>=1.14.0",
    "asyncpg>=0.30.0",
    "openai>=1.59.3",
    "pgai[sqlalchemy] @ git+https://github.com/timescale/pgai@jascha/add-alembic-migration-ops#egg=pgai&subdirectory=projects/pgai",
    "py-cord>=2.6.1",
    "sqlalchemy[asyncio]>=2.0.36",
]
classifiers = [
    "License :: OSI Approved :: PostgreSQL License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["pgai_discord_bot"]

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
Homepage = "https://github.com/timescale/pgai"
Repository = "https://github.com/timescale/pgai"
"Bug Tracker" = "https://github.com/timescale/pgai/issues"
Documentation = "https://github.com/timescale/pgai/tree/main/docs"


[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
python_files = ["test_*.py"]

[tool.pyright]
# this enables practically every flag given by pyright.
# there are a couple of flags that are still disabled by
# default in strict mode as they are experimental and niche.
typeCheckingMode = "strict"
exclude = [
    ".venv",
    ".direnv",
    ".devenv",
]
reportImplicitOverride = true

[tool.ruff]
line-length = 88
indent-width = 4
output-format = "grouped"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "ARG",  # unused arguments
    "W291", # trailing whitespace
    "PIE",  # print statements
    "Q"     # flakes8-quote
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.uv]
dev-dependencies = [
    "ruff==0.6.9",
    "pytest==8.3.2",
    "python-dotenv==1.0.1",
    "pyright==1.1.385",
    "testcontainers==4.8.1"
]
